Below is a basic example of how you could set up this software using PHP for backend development, HTML for frontend, and MySQL for the database. This example assumes you have XAMPP installed and running, and have set up your project folder within the htdocs directory.

### Step 1: Setting up the MySQL Database
1. Open phpMyAdmin (usually accessible via `http://localhost/phpmyadmin`).
2. Create a new database named `task_manager`.
3. Create two tables named `customers` and `items` with the required fields as mentioned in the tasks.

**customers table:**
```sql
CREATE TABLE customers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(10),
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    contact_number VARCHAR(20),
    district VARCHAR(50)
);
```

**items table:**
```sql
CREATE TABLE items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    item_code VARCHAR(20),
    item_name VARCHAR(100),
    item_category VARCHAR(50),
    item_subcategory VARCHAR(50),
    quantity INT,
    unit_price DECIMAL(10, 2)
);
```

### Step 2: Setting up the PHP Backend
#### For Customer:
Create `customer.php`:

```php
<?php
// Connect to the database
$mysqli = new mysqli("localhost", "root", "", "task_manager");

// Check connection
if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Function to validate form data
function validateCustomerForm($data) {
    // Implement your form validation logic here
    // Example: Check if required fields are filled, validate phone number format, etc.
}

// Process form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate form data
    $errors = validateCustomerForm($_POST);
    if (empty($errors)) {
        // Insert customer data into database
        $title = $_POST['title'];
        $first_name = $_POST['first_name'];
        $last_name = $_POST['last_name'];
        $contact_number = $_POST['contact_number'];
        $district = $_POST['district'];
        
        $sql = "INSERT INTO customers (title, first_name, last_name, contact_number, district) VALUES ('$title', '$first_name', '$last_name', '$contact_number', '$district')";
        
        if ($mysqli->query($sql) === TRUE) {
            echo "New customer created successfully";
        } else {
            echo "Error: " . $sql . "<br>" . $mysqli->error;
        }
    } else {
        // Display validation errors
        foreach ($errors as $error) {
            echo $error . "<br>";
        }
    }
}

// Close database connection
$mysqli->close();
?>
```

#### For Item:
Create `item.php` with similar structure as `customer.php`, but tailored for item registration.

### Step 3: Frontend HTML Forms
Create HTML forms to capture customer and item details. Make sure to include proper form validation using JavaScript or HTML5 attributes.

### Step 4: Reports
For generating reports, you can create PHP scripts that query the database based on the selected date range and generate the required report format.

### Step 5: Running the Application
1. Place your PHP files and HTML files in the project folder within the htdocs directory.
2. Access your application via `http://localhost/your_project_folder`.
3. Enjoy using the software by registering customers, items, and generating reports.

This is a basic setup to get you started. You can further enhance the application with features like user authentication, better validation, styling using CSS, etc., based on your requirements.